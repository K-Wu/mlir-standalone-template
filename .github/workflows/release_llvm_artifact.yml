name: pull specified llvm, pub mlir binary produced by compiling it

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'Branch and Commit hash to pull'
        required: true
        default: 'e.g. refs/tags/llvmorg-15.0.6 or main'

jobs:
  pull_and_build_artifact:
    name: pull the specified llvm version, compile the mlir in it and publish it as a github artifact
    runs-on: ubuntu-latest
    steps:
      - name: Configure Environment
        run: echo "$GITHUB_WORKSPACE/llvm-project/prefix/bin" >> "$GITHUB_PATH"
      - name: Cache LLVM
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: llvm-project
          key: ${{ runner.os }}-llvm-install-${{ github.event.inputs.ref }}
      - name: Get LLVM
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          repository: 'llvm/llvm-project'
          ref: ${{ github.event.inputs.ref }}
          path: 'llvm-project'
      - name: Install LLVM
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        run: |
          mkdir $GITHUB_WORKSPACE/llvm-project/build
          mkdir $GITHUB_WORKSPACE/llvm-project/prefix
          cd $GITHUB_WORKSPACE/llvm-project/build
          cmake $GITHUB_WORKSPACE/llvm-project/llvm -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DLLVM_ENABLE_ASSERTIONS=ON -DLLVM_BUILD_EXAMPLES=OFF -DLLVM_TARGETS_TO_BUILD="host" -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/llvm-project/prefix -DLLVM_ENABLE_PROJECTS='mlir' -DLLVM_OPTIMIZED_TABLEGEN=ON -DLLVM_ENABLE_OCAMLDOC=OFF -DLLVM_ENABLE_BINDINGS=OFF -DLLVM_INSTALL_UTILS=ON -DLLVM_ENABLE_LLD=ON
          cmake --build . --target install -- -j$(nproc)
      - name: compress the prefix folderr and publish it as a github artifact
        uses: actions/upload-artifact@v2
        with:
          name: llvm-prefix-${{ github.event.inputs.ref }}
          path: llvm-project/prefix