name: pull latest llvm project and create PR if updated

on:
  workflow_dispatch:

env:
  LLVM_COMMIT: ff4027d152d0d928540dbc19a41840a3a59ff23d
  CMAKE_FLAGS: '-DCMAKE_LINKER=lld -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DMLIR_DIR=$GITHUB_WORKSPACE/llvm-project/prefix/lib/cmake/mlir/ -DLLVM_DIR=$GITHUB_WORKSPACE/llvm-project/prefix/lib/cmake/llvm/ -DLLVM_EXTERNAL_LIT=$GITHUB_WORKSPACE/llvm-project/build/bin/llvm-lit'

jobs:
  pull:
    step:
      - name: Cache LLVM
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: llvm-project
          key: ${{ runner.os }}-llvm-install-${{ env.LLVM_COMMIT }}
      - name: Get LLVM
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          repository: 'llvm/llvm-project'
          ref: '${{ env.LLVM_COMMIT }}'
          path: 'llvm-project'
      - name: Set environment variable llvm commit hash in llvm-project/mlir/examples/standalone/
        run: |
          echo "LLVM_COMMIT_HASH=$(cd llvm-project && git log --pretty=tformat:"%H" -n1 ./mlir/examples/standalone/)" >> $GITHUB_ENV
      - name: checkout Template Code in a separate folder
        uses: actions/checkout@v2
        with:
          path: 'mlir-standalone-template'
      - name: Get template code commit hash by using .github/workflows/get_commit_hash_from_yml.py
        run: |
          cd $GITHUB_WORKSPACE/mlir-standalone-template
          echo "TEMPLATE_COMMIT_HASH=$(python ./.github/workflows/get_commit_hash_from_yml.py)" >> $GITHUB_ENV
      - name: Update if TEMPLATE_COMMIT_HASH != LLVM_COMMIT_HASH. push to the TEMPLATE_COMMIT_HASH branch. create pull request
        if: ${{ env.TEMPLATE_COMMIT_HASH != env.LLVM_COMMIT_HASH }}
        run: |
          cd $GITHUB_WORKSPACE/mlir-standalone-template
          cp -r $GITHUB_WORKSPACE/llvm-project/mlir/examples/standalone/* .
          python .github/workflows/replace_commit_hash_in_yml.py ${{ env.LLVM_COMMIT_HASH }}
          git config --local user.email "github-actions@github.com"
          git config --local user.name "github-actions"
          git checkout -b ${{ env.TEMPLATE_COMMIT_HASH }}
          git add .
          git commit -m "Update to LLVM commit ${{ env.LLVM_COMMIT_HASH }}"
          git push origin ${{ env.TEMPLATE_COMMIT_HASH }}
          gh pr create --title "Update to LLVM commit ${{ env.LLVM_COMMIT_HASH }}" --body "Update to LLVM commit ${{ env.LLVM_COMMIT_HASH }}" --base ${{ env.TEMPLATE_COMMIT_HASH }} --head ${{ env.TEMPLATE_COMMIT_HASH }}
